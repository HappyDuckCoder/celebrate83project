import { generateObject } from "ai";
import { createOpenAI as createGroq } from "@ai-sdk/openai";
import { z } from "zod";
import { NextResponse } from "next/server";

const groq = createGroq({
  baseURL: "https://api.groq.com/openai/v1",
  apiKey: process.env.GROQ_API_KEY,
});

export async function POST() {
  try {
    const { object } = await generateObject({
      model: groq("deepseek-r1-distill-llama-70b"),
      schema: z.object({
        Wish: z.array(z.string()).length(4),
      }),
      // You are a gentle man, help me generate a wish for my beautiful friend in Women's Day.
      prompt: `
          B·∫°n l√† m·ªôt ng∆∞·ªùi ƒë√†n √¥ng tinh t·∫ø, h√£y gi√∫p t√¥i t·∫°o ra 4 l·ªùi ch√∫c ƒë·∫∑c bi·ªát d√†nh t·∫∑ng c√°c b·∫°n n·ªØ xinh ƒë·∫πp trong l·ªõp nh√¢n ng√†y Ph·ª• n·ªØ Vi·ªát Nam.

          üéâ **Y√™u c·∫ßu c·ª• th·ªÉ**:
          1Ô∏è‚É£ **M·ªói l·ªùi ch√∫c c·∫ßn li√™n quan ƒë·∫øn m·ªôt lƒ©nh v·ª±c kh√°c nhau**, c·ª• th·ªÉ:
            - üñ• **C√¥ng ngh·ªá (IT)**  

          2Ô∏è‚É£ M·ªói c√¢u ch√∫c n√™n m·ªü ƒë·∫ßu b·∫±ng m·ªôt c√¢u n√≥i n·ªïi ti·∫øng t·ª´ nh·ªØng ng∆∞·ªùi c√≥ t·∫ßm ·∫£nh h∆∞·ªüng trong t·ª´ng lƒ©nh v·ª±c.  
          3Ô∏è‚É£ H√£y s·ª≠ d·ª•ng phong c√°ch trang tr·ªçng nh∆∞ng v·∫´n th√¢n thi·ªán, g·∫ßn g≈©i v√† truy·ªÅn c·∫£m h·ª©ng.  
          4Ô∏è‚É£ M·ªói c√¢u ch√∫c k√®m theo m·ªôt bi·ªÉu t∆∞·ª£ng c·∫£m x√∫c (emoji) ph√π h·ª£p.  

          ‚ö†Ô∏è **L∆∞u √Ω**: H√£y gi·ªØ l·ªùi ch√∫c ng·∫Øn g·ªçn, truy·ªÅn c·∫£m h·ª©ng v√† th·ªÉ hi·ªán s·ª± tr√¢n tr·ªçng.  

        `,
    });
    return NextResponse.json(object);
  } catch (error) {
    console.error("Error:", error);
    return NextResponse.json(
      { error: "Internal Server Error" },
      { status: 500 }
    );
  }
}
